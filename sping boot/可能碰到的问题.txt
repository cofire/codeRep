一、springboot注解
    
    1、@RestController和@RequestMapping注解 （ 注解是Spring MVC注解）
        @RequestMapping  注解提供路由信息。它告诉Spring任何来自"/"路径的HTTP请求都应该被映射到 home 方法
        @RestController 注解告诉Spring以字符串的形式渲染结果，并直接返回给调用者。

二、springboot获取URL请求参数
    
    链接地址：http://blog.csdn.net/yalishadaa/article/details/68937141
    1、直接把表单的参数写在Controller相应的方法的形参中，适用于get方式提交，不适用于post方式提交。
            @RequestMapping("/addUser1")
            public String addUser1(String username,String password) {
                System.out.println("username is:"+username);
                System.out.println("password is:"+password);
                return "demo/index";
            }
        url形式:http://localhost/SSMDemo/demo/addUser1?username=lixiaoxi&password=111111
    2、通过HttpServletRequest接收，post方式和get方式都可以。
            @RequestMapping("/addUser2")
            public String addUser2(HttpServletRequest request) {
                String username=request.getParameter("username");
                String password=request.getParameter("password");
                System.out.println("username is:"+username);
                System.out.println("password is:"+password);
                return "demo/index";
            }
    3、通过一个bean来接收,post方式和get方式都可以。
        3.1、建立一个和表单中参数对应的bean
            package demo.model;
            public class UserModel {
                private String username;
                private String password;
                public String getUsername() {
                    return username;
                }
                public void setUsername(String username) {
                    this.username = username;
                }
                public String getPassword() {
                    return password;
                }
                public void setPassword(String password) {
                    this.password = password;
                }
            }
        3.2、用这个bean来封装接收的参数
            @RequestMapping("/addUser3")
            public String addUser3(UserModel user) {
                System.out.println("username is:"+user.getUsername());
                System.out.println("password is:"+user.getPassword());
                return "demo/index";
            }
    4、通过@PathVariable获取路径中的参数
            @RequestMapping(value="/addUser4/{username}/{password}",method=RequestMethod.GET)
            public String addUser4(@PathVariable String username,@PathVariable String password) {
                System.out.println("username is:"+username);
                System.out.println("password is:"+password);
                return "demo/index";
            }
        url形式：http://localhost/SSMDemo/demo/addUser4/lixiaoxi/111111
    5、使用@ModelAttribute注解获取POST请求的FORM表单数据
            表单头：<form action ="<%=request.getContextPath()%>/demo/addUser5" method="post"> 
            @RequestMapping(value="/addUser5",method=RequestMethod.POST)
            public String addUser5(@ModelAttribute("user") UserModel user) {
                System.out.println("username is:"+user.getUsername());
                System.out.println("password is:"+user.getPassword());
                return "demo/index";
            }

    6、用注解@RequestParam绑定请求参数到方法入参（当请求参数username不存在时会有异常发生,可以通过设置属性required=false解决,例如: @RequestParam(value="username", required=false)）
            @RequestMapping(value="/addUser6",method=RequestMethod.GET)
                public String addUser6(@RequestParam("username") String username,@RequestParam("password") String password) {
                    System.out.println("username is:"+username);
                    System.out.println("password is:"+password);
                    return "demo/index";
                }

三、图片上传
    链接：http://www.jb51.net/article/106842.htm
          http://blog.csdn.net/a625013/article/details/52414470